<Panel ux:Class="UX.ReactiveModules">
	<JavaScript>
		exports.foo = { moo: [ { bar: 'orange'}, {bar: 'apple'}, {bar:'banana'} ] }
		exports.bar = 3;

		module.add("foo", "moo", {bar: 'grape'}) 
		module.insertAt("foo", "moo", 1, {bar: 'lemon'})
		module.removeAt("foo", "moo", 2)
		module.set("foo", "moo", 3, "bar", "coconut")

		exports.change1 = function() {
			module.add("foo", "moo", {bar: 'grape'})
		}

		exports.change2 = function() {
			module.insertAt("foo", "moo", 1, {bar: 'lemon'})
		}

		exports.change3 = function() {
			module.removeAt("foo", "moo", 2)
			module.removeAt("foo", "moo", 2)
		}

		exports.change4 = function() {
			module.set("foo", "moo", 1, "bar", "fish")
		}

		exports.change5 = function() {
			module.set("bar", 1)
		}

		exports.change6 = function () {
			if (reactive_modules_times !== 2) { throw new Error(); }
			module.set({ foo: { moo: [ { bar: 'batman'}, {bar: 'batman'}, {bar:'batman'} ] }, bar: 8})
		}

		exports.change7 = function() {
			if (reactive_modules_times !== 3) { throw new Error(); }
		}
	</JavaScript>
	<StackPanel ux:Name="p">
		<Each Items="{foo.moo}">
			<Text>{bar}</Text>
		</Each>
	</StackPanel>
	<Panel>
		<JavaScript dep:x="{foo}">
			if (typeof reactive_modules_times === "undefined") { reactive_modules_times = 1; }
			reactive_modules_times++;
			if (reactive_modules_times === 2)
			{
				if (JSON.stringify(x) !== '{"moo":[{"bar":"orange"},{"bar":"lemon"},{"bar":"banana"},{"bar":"coconut"}]}')
					{ throw new Error(JSON.stringify(x)); }
			}
			else if (reactive_modules_times === 3)
			{
				if (JSON.stringify(x) !== '{"moo":[{"bar":"batman"},{"bar":"batman"},{"bar":"batman"}]}')
					{ throw new Error(); }
			}
			else
			{
				throw new Error();
			}
		</JavaScript>
	</Panel>
	<Text ux:Name="bar">{bar}</Text>
	<Text ux:Name="s">{foo.moo[1].bar}</Text>
	<FuseTest.Invoke Handler="{change1}" ux:Name="change1"/>
	<FuseTest.Invoke Handler="{change2}" ux:Name="change2"/>
	<FuseTest.Invoke Handler="{change3}" ux:Name="change3"/>
	<FuseTest.Invoke Handler="{change4}" ux:Name="change4"/>
	<FuseTest.Invoke Handler="{change5}" ux:Name="change5"/>
	<FuseTest.Invoke Handler="{change6}" ux:Name="change6"/>
	<FuseTest.Invoke Handler="{change7}" ux:Name="change7"/>
</Panel>